pool:
  vmImage: 'windows-2019'
trigger:
  batch: true
  branches:
    include:
    - develop
    - master
variables:
  Parameters.configuration: 'Release'
  outputDirectory: '$(build.binariesDirectory)/$(Parameters.configuration)'
name: 3.$(Build.BuildId)$(Rev:.r).0
stages:
- stage: BuildApp
  jobs:
  - job: buildapp
    steps:
    - task: DownloadSecureFile@1
      inputs:
        secureFile: simon2.keystore
    - task: DownloadSecureFile@1
      inputs:
        secureFile: zipalign2.bat
    - script: '(echo $(Build.BuildNumber) && echo $(Build.BuildId)) > .buildinfo.json'
      displayName: 'Emit build number'
      workingDirectory: '$(Build.SourcesDirectory)/PwnedPass2'
      failOnStderr: true
    - task: NuGetToolInstaller@0
      displayName: 'Install Nuget'
      inputs:
        versionSpec: 4.9.2
    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: PwnedPass2.sln
        restoreDirectory: packages
    - task: colinsalmcorner.colinsalmcorner-buildtasks.version-assemblies-task.VersionAssemblies@2
      displayName: 'versionCode'
      inputs:
        sourcePath: PwnedPass2.Android/Properties
        filePattern: AndroidManifest.xml
        versionSource: variable
        customNumberVariable: Build.BuildId
        versionFormat: custom
        customBuildRegex: '(?:\d+.\d+.\d+.)(\d+)'
        replaceVersionFormat: custom
        customReplaceRegex: 'versionCode="\d+'
        buildRegexIndex: 1
        replacePrefix: 'versionCode="'  
    - task: colinsalmcorner.colinsalmcorner-buildtasks.version-assemblies-task.VersionAssemblies@2
      displayName: 'versionName'
      inputs:
        sourcePath: PwnedPass2.Android/Properties
        filePattern: AndroidManifest.xml
        versionSource: variable
        customNumberVariable: Build.BuildId
        versionFormat: custom
        customBuildRegex: '(?:\d+.\d+.\d+.)(\d+)'
        replaceVersionFormat: custom
        customReplaceRegex: 'versionName="3.\d+'
        buildRegexIndex: 1
        replacePrefix: 'versionName="3.'
    - task: XamarinAndroid@1
      displayName: 'Build Xamarin.Android'
      inputs:
        projectFile: 'PwnedPass2.Android/PwnedPass2.Android.csproj'
        outputDirectory: '$(Build.Repository.LocalPath)/PwnedPass2.Android/bin/$(Parameters.configuration)'
        configuration: '$(Parameters.configuration)'
        msbuildVersionOption: 'latest'
        msbuildArchitectureOption: 'x64'
        jdkOption: 'JDKVersion'
        jdkVersionOption: '1.8'
    - powershell: |
        $temp = Get-ChildItem $(Build.Repository.LocalPath)\PwnedPass2.Android\obj\$(Parameters.configuration) | Select name
        Write-host $temp
        $temp = $temp.name
        Write-host $temp
        Write-Output ("##vso[task.setvariable variable=AndroidVer;]$temp")
        Write-host $AndroidVer
      displayName: 'Set Android Version'
    - script: '$(Agent.TempDirectory)\zipalign2.bat'
      displayName: 'zipalign Script'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: apk'
      inputs:
        PathtoPublish: 'PwnedPass2.Android/bin/$(Parameters.configuration)/PwnedPass2.Android-Signed.apk'
        ArtifactName: APK
    - task: CmdLine@2
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
      inputs:
        script: 'echo $(Build.SourceVersionMessage)  > $(Build.Repository.LocalPath)\release.txt'        
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: release notes'
      inputs:
        PathtoPublish: '$(Build.Repository.LocalPath)\release.txt'
        ArtifactName: release
    - task: whitesource.ws-bolt.bolt.wss.WhiteSource Bolt@18
      displayName: 'WhiteSource Bolt'
